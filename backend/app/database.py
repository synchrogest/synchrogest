from sqlalchemy import create_engine
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker
from app.config import settings
print("üöÄ DATABASE_URL carregada:", settings.DATABASE_URL)


# Criar engine do SQLAlchemy
engine = create_engine(
    settings.DATABASE_URL, connect_args={"check_same_thread": False} if settings.DATABASE_URL.startswith("sqlite") else {}
)

# Criar sess√£o local
SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)

# Criar base para os modelos
Base = declarative_base()

# Fun√ß√£o para obter a sess√£o do banco de dados
def get_db():
    """
    Fun√ß√£o de depend√™ncia para obter uma sess√£o do banco de dados.
    Garante que a sess√£o seja fechada ap√≥s o uso.
    """
    db = SessionLocal()
    try:
        yield db
    finally:
        db.close()
